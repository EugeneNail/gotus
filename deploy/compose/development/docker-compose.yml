services:
  app:
    image: golang:1.24.4-alpine
    container_name: gotus-app
    working_dir: ${APP_ROOT}
    env_file:
      - .env
    ports:
      - ${APP_PORT}:${APP_PORT}
    volumes:
      - ../../../api:${APP_ROOT}/api
      - ../../../cmd:${APP_ROOT}/cmd
      - ../../../configs:${APP_ROOT}/configs
      - ../../../deploy/migrations:${APP_ROOT}/deploy/migrations
      - ../../../internal:${APP_ROOT}/internal
      - ../../../storage:${APP_ROOT}/storage
      - ../../../web:${APP_ROOT}/web
      - ../../../go.mod:${APP_ROOT}/go.mod
      - ../../../go.sum:${APP_ROOT}/go.sum
      - ../../../vendor:${APP_ROOT}/vendor
    depends_on:
      db:
        condition: service_healthy
    command: [ 'go', 'run', 'cmd/gotus/main.go' ]


  ui:
    image: node:24
    container_name: gotus-ui
    working_dir: ${APP_ROOT}
    env_file:
      - .env
    volumes:
      - ../../../ui:${UI_ROOT}
    ports:
      - ${UI_PORT}:${UI_PORT}
    command: bash -c "npm install && PORT=${UI_PORT} npm start"

  db:
    image: postgres:17
    container_name: gotus-db
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - ../../../storage/database/postgres/development:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 1s
      timeout: 30s
      retries: 10